import { Meta, StoryObj } from '@storybook/angular';
import { CheckboxComponent } from '../../app/components/Checkbox/checkbox/checkbox.component';

export default {
  title: 'Components/Checkbox/Checkbox',
  component: CheckboxComponent,
  tags: ['autodocs'],
  argTypes: {
    checked: {
      control: 'boolean',
      description: 'Estado del checkbox (marcado o desmarcado)',
    },
  },
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: String.raw`
# ‚òëÔ∏è Checkbox

El **Checkbox** en Eficacia se utiliza para permitir a los usuarios seleccionar una o varias opciones dentro de la interfaz.

---

## üß© Uso

- Formularios y configuraciones: Para habilitar o deshabilitar opciones dentro de ajustes o preferencias.
- Selecci√≥n m√∫ltiple: En listas o tablas donde el usuario puede elegir varios elementos a la vez.
- Filtros y b√∫squedas: Para refinar resultados en interfaces con opciones de filtrado.
- T√©rminos y condiciones: Para aceptar pol√≠ticas antes de continuar con un proceso.
- Activaci√≥n de funcionalidades: Para encender o apagar caracter√≠sticas espec√≠ficas.

---

## ‚úÖ Mejores pr√°cticas

### ‚úîÔ∏è S√≠:

- Mantener la estructura del componente en Figma usando variantes y propiedades predefinidas.
- Elegir estilos adecuados seg√∫n el contexto.
- Configurar etiquetas y estados mediante variantes (activo, deshabilitado, indeterminado).
- Respetar espaciado, alineaci√≥n, tipograf√≠a y jerarqu√≠a visual.
- Usar Auto Layout para escalabilidad y adaptabilidad.

### ‚ùå No:

- ‚ùå No modificar el tama√±o del checkbox manualmente.
- ‚ùå No agregar √≠conos, textos o decoraciones fuera del dise√±o.
- ‚ùå No cambiar colores o estilos sin seguir la librer√≠a UI.
- ‚ùå No desactivar Auto Layout, ya que afecta la adaptabilidad del componente.

---

## üéõÔ∏è Variantes disponibles

| Variante    | Descripci√≥n                         |
|-------------|-------------------------------------|
| Default     | Caja sin marcar (borde gris)        |
| Checked     | Caja marcada (fondo azul, check)    |
| Disabled    | Inactivo, sin posibilidad de clic   |

---

## üß± Elementos clave

| Elemento        | Descripci√≥n                                                        |
|-----------------|--------------------------------------------------------------------|
| Contenedor      | Define el tama√±o y forma del checkbox (18x18px, borde redondeado). |
| Icono Check     | SVG que aparece al estar marcado.                                  |
| Estados Visuales| Cambian color de fondo y borde seg√∫n estado del checkbox.          |

---

## ‚öôÔ∏è Props disponibles

| Propiedad       | Tipo     | Descripci√≥n                             | Requerido | Default |
|----------------|----------|-----------------------------------------|-----------|---------|
| \`checked\`     | boolean  | Estado actual del checkbox              | No        | false   |
| \`checkedChange\` | EventEmitter<boolean> | Evento emitido al cambiar el estado | No        | ‚Äî       |
        `,
      },
    },
  },
} as Meta<CheckboxComponent>;

type Story = StoryObj<CheckboxComponent>;

export const Default: Story = {
  args: {
    checked: false,
  },
};

export const Variants: Story = {
  render: () => ({
    template: `
      <div style="display: flex; gap: 24px; align-items: center">
        <storybook-checkbox [checked]="false"></storybook-checkbox>
        <storybook-checkbox [checked]="true"></storybook-checkbox>
      </div>
    `,
  }),
  parameters: {
    docs: {
      description: {
        story: 'Vista general de las variantes visuales del Checkbox.',
      },
    },
  },
};
